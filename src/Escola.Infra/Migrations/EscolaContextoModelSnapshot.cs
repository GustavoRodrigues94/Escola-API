// <auto-generated />
using System;
using Escola.Infra.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Escola.Infra.Migrations
{
    [DbContext(typeof(EscolaContexto))]
    partial class EscolaContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Escola.Domain.Entidades.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<Guid>("EscolaridadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HistoricoEscolarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("EscolaridadeId");

                    b.HasIndex("HistoricoEscolarId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("Escola.Domain.Entidades.Escolaridade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EscolaridadeTipo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Escolaridade");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ed433bb-5687-4b00-9d1b-84717101ac48"),
                            EscolaridadeTipo = "Infantil"
                        },
                        new
                        {
                            Id = new Guid("ce280415-4d18-4637-9244-7b76b69274a4"),
                            EscolaridadeTipo = "Fundamental"
                        },
                        new
                        {
                            Id = new Guid("ef4565e5-b230-4182-89f1-0ebfc1e26563"),
                            EscolaridadeTipo = "Medio"
                        },
                        new
                        {
                            Id = new Guid("3165c861-851b-4913-8ced-539bcb35af63"),
                            EscolaridadeTipo = "Superior"
                        });
                });

            modelBuilder.Entity("Escola.Domain.Entidades.HistoricoEscolar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("HistoricoBase64")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("HistoricoEscolar");
                });

            modelBuilder.Entity("Escola.Domain.Entidades.Aluno", b =>
                {
                    b.HasOne("Escola.Domain.Entidades.Escolaridade", "Escolaridade")
                        .WithMany("Alunos")
                        .HasForeignKey("EscolaridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escola.Domain.Entidades.HistoricoEscolar", "HistoricoEscolar")
                        .WithMany("Alunos")
                        .HasForeignKey("HistoricoEscolarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escolaridade");

                    b.Navigation("HistoricoEscolar");
                });

            modelBuilder.Entity("Escola.Domain.Entidades.Escolaridade", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("Escola.Domain.Entidades.HistoricoEscolar", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
